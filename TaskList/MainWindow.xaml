<Window x:Class="TaskList.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TaskList"
        mc:Ignorable="d" WindowStyle="None"
        Title="Task List" Height="350" Width="525" SizeChanged="Window_SizeChanged" ResizeMode="CanMinimize" Loaded="Window_Loaded" Closing="Window_Closing" Activated="Window_Activated" ShowInTaskbar="False" 
        AllowsTransparency="True"  Background="Transparent">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UIStyleResource.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Border Background="White" BorderBrush="Transparent" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" Margin="6">
        <Border.Effect>
            <DropShadowEffect BlurRadius="5" Direction="-90" RenderingBias="Quality" ShadowDepth="2"/>
        </Border.Effect>
        <Grid MouseEnter="Grid_MouseEnter" MouseLeave="Grid_MouseLeave" Margin="2,0,2,0"  >

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ListView Margin="0" Name="mListView" BorderBrush="Transparent" AllowDrop="True" PreviewMouseLeftButtonDown="lstView_PreviewMouseLeftButtonDown" MouseMove="lstView_MouseMove" DragEnter="lstView_DragEnter" Drop="lstView_Drop" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" SelectionChanged="lstView_SelectionChanged"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                  ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Top" Background="Transparent">
                <ListView.Resources>
                    <Style TargetType="GridViewColumnHeader">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <EventSetter Event="PreviewMouseDown" Handler="ListViewItem_PreviewMouseDown"/>
                        <!--<Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>-->
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="BorderBrush" Value="#33000000"/>
                        <Style.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="0"/>
                            </Style>
                        </Style.Resources>
                        
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView x:Name="mListGridView" >
                        <GridViewColumn Header="Ctr." Width="28" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Click="StatusButton_Click" MouseDoubleClick="StatusButton_MouseDoubleClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Loaded="StatusButton_Loaded" Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Right" Width="22"  Height="22"  Margin="-4,0,-4,0" Padding="0" PreviewMouseDown="StatusButton_PreviewMouseDown" ToolTip="R: Top, M: Hide" >
                                        <Image Source="{Binding ImageSource}" Opacity="{Binding ImageAlpha}" HorizontalAlignment="Center" VerticalAlignment="Top"  />
                                    </Button>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="TimerHeader" Header="Timer" Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock  Text="{Binding TimeStr}" Margin="-8,1,-8,0" FontWeight="{Binding FontWeight}" Foreground="{Binding FontColor}" FontFamily="Consolas" MinWidth="{Binding Width, ElementName=TimerHeader}"  TextAlignment="Right"  HorizontalAlignment="Right" MouseLeftButtonUp="TimerTextBlock_MouseUp" ToolTip="R:Top, M:Hide, L:Reset"/>

                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Note" Width="100" x:Name="mGridColumnNote">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RichTextBox Name="TextBoxList" Background="#01FFFFFF" FontSize="13" AcceptsReturn="True" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" TextChanged="TextBoxList_TextChanged"  PreviewKeyDown="TextBoxList_PreviewKeyDown"
                                         GotFocus="TextBoxList_GotFocus" LostFocus="TextBoxList_LostFocus" Loaded="TextBoxList_Loaded" AcceptsTab="True" BorderBrush="Transparent">
                                        <!--RichTextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Style.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="IsReadOnly" Value="False" />
                                                        <Setter Property="BorderBrush" Value="LightGray"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="False">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="IsReadOnly" Value="True" />
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="BorderBrush" Value="#01FFFFFF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </RichTextBox.Style-->
                                    </RichTextBox>
                                    
                                    <!--TextBox Name="TextBoxList" Background="#01FFFFFF" FontSize="13" Text="{Binding Note}" AcceptsReturn="True" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" TextChanged="TextBoxList_TextChanged" ScrollViewer.CanContentScroll="False" ScrollViewer.IsDeferredScrollingEnabled="False" PreviewKeyDown="TextBoxList_PreviewKeyDown"
                                         GotFocus="TextBoxList_GotFocus" LostFocus="TextBoxList_LostFocus" Loaded="TextBoxList_Loaded" FontFamily="Microsoft JhengHei" AcceptsTab="True">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Style.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="IsReadOnly" Value="False" />
                                                        <Setter Property="BorderBrush" Value="LightGray"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="False">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="IsReadOnly" Value="True" />
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="BorderBrush" Value="#01FFFFFF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox-->
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>

            <ProgressBar Height="4" BorderThickness="0" Padding="0" Margin="0" x:Name="mProgressBarAutoSave" VerticalAlignment="Bottom" BorderBrush="{x:Null}" Foreground="#AA06B025" Background="{x:Null}" VerticalContentAlignment="Bottom"/>
            <Label Grid.Column="2" x:Name="mLabelTitle" Grid.ColumnSpan="2" Background="Transparent" Content="Task" HorizontalContentAlignment="Center" VerticalAlignment="Top" BorderBrush="Transparent">
            </Label>
            <Grid x:Name="gridControlPanel" Margin="0" UIElement.PreviewMouseLeftButtonDown="OnButtonMove_MouseDown" UIElement.PreviewMouseMove="OnButtonMove_MouseMove" VerticalAlignment="Top" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="24"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="2" Grid.ColumnSpan="3" x:Name="btnMove" Visibility="Visible" Background="White" Foreground="Black" Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Stretch" Width="auto" Click="btnTask_Click" Height="24" Margin="0" Padding="0" PreviewMouseLeftButtonDown="OnButtonMove_MouseDown" PreviewMouseMove="btnMove_PreviewMouseMove" VerticalContentAlignment="Stretch" Opacity="0.1" BorderBrush="Transparent">

                    <Button.ContextMenu>
                        <ContextMenu x:Name="mMainContextMenu">
                            <MenuItem x:Name="mMenuSave" Height="28" Click="MenuItem_Click">
                                <MenuItem.Icon>
                                    <Image Source="Resource/Icons/baseline_save_black_36dp.png" Width="20" Height="20" />
                                </MenuItem.Icon>
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center">_Save...</AccessText>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem x:Name="mMenuLoad" Height="28" Click="MenuItem_Click">
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center">_Load...</AccessText>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator />
                            <MenuItem Height="28" >
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center">_Auto Save</AccessText>
                                    </StackPanel>
                                </MenuItem.Header>
                                <MenuItem Height="28" x:Name="mMenuAutoSave" StaysOpenOnClick="True" Click="MenuItem_Click" IsCheckable="True">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center" Margin="20,0,0,0">Enable</AccessText>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Height="28" x:Name="mMenuAutoSavePathSelection" Click="MenuItem_Click">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center" Margin="20,0,0,0">Select Path...</AccessText>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Height="28" x:Name="mMenuAutoSaveShowProgress" StaysOpenOnClick="True" Click="MenuItem_Click" IsCheckable="True">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center" Margin="20,0,0,0">Show Countdown</AccessText>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Height="28" x:Name="mMenuAutoSaveSkipStatusChanges" StaysOpenOnClick="True" Click="MenuItem_Click" IsCheckable="True" IsChecked="True">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center" Margin="20,0,0,0">Skip Status Changes</AccessText>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>

                            </MenuItem>
                            <Separator />
                            <MenuItem Height="28" >
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center">_Bold Regex</AccessText>
                                    </StackPanel>
                                </MenuItem.Header>
                                <MenuItem Height="28" StaysOpenOnClick="True" Click="MenuItem_Click" IsChecked="True">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox MinWidth="120" x:Name="mTextBoxRegexInput" LostFocus="RegexInputTextBox_LostFocus" VerticalContentAlignment="Center" ScrollViewer.CanContentScroll="False" ScrollViewer.IsDeferredScrollingEnabled="False">
                                                
                                            </TextBox>
                                            <Button Width="32" Content="Reset" Click="RegexInputTextBox_LostFocus"/>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                            </MenuItem>
                            <Separator />
                            <MenuItem x:Name="mMenuExit" Height="28" Click="MenuItem_Click">
                                <MenuItem.Icon>
                                    <Image Source="Resource/Icons/baseline_clear_black_36dp.png" Width="20" Height="20" />
                                </MenuItem.Icon>
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <AccessText Foreground="Black" FontSize="14" VerticalAlignment="Center">_Exit</AccessText>
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>

                <Button Grid.Column="0" x:Name="btnAdd" Visibility="Visible" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Right" Width="24" Click="btnTask_Click" Height="24" ToolTip="Add task" Margin="0" Padding="0" PreviewMouseLeftButtonDown="OnButtonMove_MouseDown" PreviewMouseMove="OnButtonMove_MouseMove">
                    <Image Source="Resource/Icons/baseline_add_black_36dp.png" Stretch="Fill" Height="auto" Width="auto" />
                </Button>

                <Button Grid.Column="1" x:Name="btnRemove" Visibility="Visible" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Right" Width="24" Click="btnTask_Click" Height="24" ToolTip="Remove task" Margin="0" Padding="0" PreviewMouseLeftButtonDown="OnButtonMove_MouseDown" PreviewMouseMove="OnButtonMove_MouseMove">
                    <Image Source="Resource/Icons/baseline_remove_black_36dp.png" Stretch="Fill" Height="auto" Width="auto" />
                </Button>

                <Button Grid.Column="2" x:Name="btnUndo" Visibility="Visible" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Right" Width="24" Click="btnTask_Click" Height="24" ToolTip="Undo remove" Margin="0" Padding="0" PreviewMouseLeftButtonDown="OnButtonMove_MouseDown" PreviewMouseMove="OnButtonMove_MouseMove">
                    <Image Source="Resource/Icons/baseline_undo_black_36dp.png" Stretch="Fill" Height="auto" Width="auto" RenderOptions.BitmapScalingMode="HighQuality"/>
                </Button>

                <Button Grid.Column="2" x:Name="btnDone" Visibility="Collapsed" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Right" Width="24" Click="btnTask_Click" Height="24" ToolTip="Done" Margin="0" Padding="0" PreviewMouseLeftButtonDown="OnButtonMove_MouseDown" PreviewMouseMove="OnButtonMove_MouseMove">
                    <Image Source="Resource/Icons/baseline_done_black_36dp.png" Stretch="Fill" Height="auto" Width="auto" />
                </Button>

                <ToggleButton Grid.Column="4" IsChecked="False" Style="{StaticResource AlwaysOnTopToggleButtonStyleNoBorder}" x:Name="btnFold" VerticalAlignment="Top" HorizontalAlignment="Right" Width="24" Click="btnFold_Click" Height="24" ToolTip="Fold/Unfold" Panel.ZIndex="1" Padding="0" Margin="0" Focusable="False">
                    <Grid>
                        <Image x:Name="imgUnfold" Source="Resource/Icons/baseline_unfold_less_black_36dp.png" Stretch="Fill" Height="auto" Width="auto" RenderOptions.BitmapScalingMode="HighQuality" />
                        <Image x:Name="imgFold" Visibility="Collapsed" Source="Resource/Icons/baseline_unfold_more_black_36dp.png" Stretch="Fill" Height="auto" Width="auto" RenderOptions.BitmapScalingMode="HighQuality" />
                    </Grid>
                </ToggleButton>

                <ToggleButton Grid.Column="5" IsChecked="False" Style="{StaticResource AlwaysOnTopToggleButtonStyleNoBorder}" x:Name="btnAlwaysOnTop" VerticalAlignment="Top" HorizontalAlignment="Right" Width="24" Click="btnAlwaysOnTop_Click" Height="24" ToolTip="Always On Top" Panel.ZIndex="1" Padding="0" Margin="0" Focusable="False">
                    <Grid>
                        <Image x:Name="imgAlwaysOnTopUnlock" Source="Resource/Icons/baseline_toggle_off_black_36dp_dark.png" Stretch="Fill" Height="auto" Width="auto" RenderOptions.BitmapScalingMode="HighQuality" />
                        <Image x:Name="imgAlwaysOnTopLock" Source="Resource/Icons/baseline_toggle_on_black_36dp_green.png" Stretch="Fill" Height="auto" Width="auto" RenderOptions.BitmapScalingMode="HighQuality" Visibility="Collapsed"/>
                    </Grid>
                </ToggleButton>

                <Button Grid.Column="6" x:Name="btnClose" Visibility="Visible" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Right" Width="24" Click="btnClose_Click" Height="24" ToolTip="L:Close R:Min" Margin="0" Padding="0" PreviewMouseLeftButtonDown="OnButtonMove_MouseDown" PreviewMouseMove="OnButtonMove_MouseMove" BorderBrush="Transparent" PreviewMouseRightButtonDown="ButtonClose_PreviewMouseRightButtonDown">
                    <Image Source="Resource/Icons/baseline_clear_black_36dp.png" Stretch="Fill" Height="auto" Width="auto" />
                </Button>
            </Grid>
        </Grid>
    </Border>
</Window>
